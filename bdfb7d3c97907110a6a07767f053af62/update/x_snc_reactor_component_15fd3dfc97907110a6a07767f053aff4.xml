<?xml version="1.0" encoding="UTF-8"?><record_update table="x_snc_reactor_component">
    <x_snc_reactor_component action="INSERT_OR_UPDATE">
        <content_css/>
        <dependencies>4afcbdbc97907110a6a07767f053af70,9861d5311bd7e110cd6153d16b4bcb73</dependencies>
        <description>A demo application to showcase the use of KoliBri components.</description>
        <jsx>true</jsx>
        <module>true</module>
        <name>KoliBriDemoApp</name>
        <role>app</role>
        <script><![CDATA[class KoliBriDemoApp extends ReactorComponent
{
	constructor(props)
	{
		super(props);
		var strTheme = GetStringValue(this.props.theme);
		if (strTheme == '')
		{
			strTheme = 'default';
		}
		this.state = {
			state: 'start',
			theme: strTheme
		};
		//BindAllFunctionsToThis(this);
		this.onClickTheme = this.onClickTheme.bind(this);
	}

	componentDidMount()
	{
	}

	componentWillUnmount()
	{
	}

	onClickTheme(strTheme)
	{
		this.setState( {theme: strTheme, state: 'changetheme' } );
	}
	
		
	stateStart()
	{
		return (
			<div data-theme={ this.state.theme }>
				<kol-heading _level="1" _label="KoliBri Demo App"></kol-heading>
				<kol-button _label="DEFAULT" _value="default" onClick={ () => this.onClickTheme('default') }/>
				<kol-button _label="BAMF" _value="bamf" onClick={ () => this.onClickTheme('bamf') }/>
				<kol-button _label="BMF" onClick={ () => this.onClickTheme('bmf') }/>
				<kol-button _label="BPA" onClick={ () => this.onClickTheme('bpa') }/>
				<kol-button _label="BZSt" onClick={ () => this.onClickTheme('bzst') }/>
				<kol-button _label="DE" onClick={ () => this.onClickTheme('de') }/>
				<kol-button _label="DESYv1" onClick={ () => this.onClickTheme('desy-v1') }/>
				<kol-button _label="DESYv2" onClick={ () => this.onClickTheme('desy-v2') }/>
				<kol-button _label="ECL_EC" onClick={ () => this.onClickTheme('ecl-ec') }/>
				<kol-button _label="ECL_EU" onClick={ () => this.onClickTheme('ecl-eu') }/>
				<kol-button _label="EN" onClick={ () => this.onClickTheme('en') }/>
				<kol-button _label="ITZBund" onClick={ () => this.onClickTheme('itzbund') }/>
				<kol-button _label="MAPZ" onClick={ () => this.onClickTheme('mapz') }/>
				<kol-button _label="ZOLLv2" onClick={ () => this.onClickTheme('zoll-v2') }/>

	
				<kol-heading _level="2" _label="Alert"></kol-heading>
				<kol-alert _label="Alert Header" _level="1" _type="success" _variant="msg">Alert text area.</kol-alert>
				<kol-alert _label="Alert Header" _level="2" _type="info" _variant="card">Alert text area.</kol-alert>					
					
				<kol-heading _level="2" _label="Breadcrump"></kol-heading>
				<kol-breadcrumb _links='[{"_label":"Start","_href":"#/"},{"_label":"Sub page","_href":"#/page1"}]'></kol-breadcrumb>
				<kol-heading _level="2" _label="Button"></kol-heading>
				<kol-button _label="Click me!" onClick={ this.onClick }/>
					
				<kol-heading _level="2" _label="Card"></kol-heading>
					
				<kol-card _label="Example" _hasFooter="true" _level="1">
					<div slot="header">Text in header area</div>
					<div slot="content">Text in content area</div>
					<div slot="footer">Text in footer area</div>
				</kol-card>					
					
				<kol-heading _level="2" _label="Spin"></kol-heading>
				<kol-spin _show/>
					
					
				<kol-kolibri></kol-kolibri>

			</div>
		);	
	}
	
	stateChangeTheme()
	{
		this.setState( { state: 'start' } );
		return e(Centered,{},[
			e('kol-spin',{ _show: true },null)]);
	}
	
	render()
	{
		
		if (this.state.state == 'changetheme')
		{
			return this.stateChangeTheme();
		}
		
		return this.stateStart();
		

		/*
		var themeOptions = [
			{'label':'ITZBund','value':'0'},
			{'label':'BMF','value':'1'},
			{'label':'ECL-EC','value':'2'}
			];
			*/
		
		//var strOptions = JSON.stringify(themeOptions);

		/*
		
		_rows="4"
						_multiple
		*/
		
	/*
						<kol-select
						_options="[{'label':'ITZBund','value':'0'},{'label':'BMF','value':'1'},{'label':'ECL-EC','value':'2'}]"
						_value="['0']"
						>
						Theme
					</kol-select>
	*/
		
	}	
}]]></script>
        <source_type>ui_script</source_type>
        <sys_class_name>x_snc_reactor_component</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-07-25 11:38:22</sys_created_on>
        <sys_id>15fd3dfc97907110a6a07767f053aff4</sys_id>
        <sys_mod_count>15</sys_mod_count>
        <sys_name>KoliBriDemoApp</sys_name>
        <sys_package display_value="KoliBri WORK IN PROGRESS" source="x_snc_kolibri">bdfb7d3c97907110a6a07767f053af62</sys_package>
        <sys_policy/>
        <sys_scope display_value="KoliBri WORK IN PROGRESS">bdfb7d3c97907110a6a07767f053af62</sys_scope>
        <sys_update_name>x_snc_reactor_component_15fd3dfc97907110a6a07767f053aff4</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-08-31 14:57:15</sys_updated_on>
        <type>script</type>
        <ui_script display_value="x_snc_kolibri.KoliBriDemoApp">6b9df5fc97907110a6a07767f053afbc</ui_script>
        <url/>
    </x_snc_reactor_component>
</record_update>
