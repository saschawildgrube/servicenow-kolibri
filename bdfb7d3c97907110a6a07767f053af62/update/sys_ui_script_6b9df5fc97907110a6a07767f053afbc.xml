<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_script">
    <sys_ui_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <description>A React app to demonstrate the use of KoliBri web components which that can switch between different themes.</description>
        <global>false</global>
        <ignore_in_now_experience>false</ignore_in_now_experience>
        <name>x_snc_kolibri.KoliBriDemoApp</name>
        <script><![CDATA[class KoliBriDemoApp extends ReactorComponent
{
	constructor(props)
	{
		super(props);
		var strTheme = GetStringValue(this.props.theme);
		if (strTheme == '')
		{
			strTheme = 'default';
		}
		
		// Currently, only the default theme is supported
		strTheme = 'default';
		
		this.state = {
			state: 'start',
			theme: strTheme
		};
		BindAllFunctionsToThis(this);
	}

	componentDidMount()
	{
	}

	componentWillUnmount()
	{
	}

	onClickChangeTheme(strTheme)
	{
		// Changing the theme is not supported at the moment
		strTheme = 'default';
		this.setState( {theme: strTheme, state: 'changetheme' } );
	}
	
		
	stateStart()
	{
		/* Changing the theme is currently not supported
				<KolButton _label="DEFAULT" _value="default" _on={{ onClick: () => this.onClickTheme('default') }}/>
				<KolButton _label="BAMF" _value="bamf" _on={{ onClick: () => this.onClickTheme('bamf') }}/>
				<KolButton _label="BMF" _value="bamf" _on={{ onClick: () => this.onClickTheme('bmf') }}/>
				<KolButton _label="BPA" onClick={ () => this.onClickTheme('bpa') }/>
				<KolButton _label="BZSt" onClick={ () => this.onClickTheme('bzst') }/>
				<KolButton _label="DE" onClick={ () => this.onClickTheme('de') }/>
				<KolButton _label="DESYv1" onClick={ () => this.onClickTheme('desy-v1') }/>
				<KolButton _label="DESYv2" onClick={ () => this.onClickTheme('desy-v2') }/>
				<KolButton _label="ECL_EC" onClick={ () => this.onClickTheme('ecl-ec') }/>
				<KolButton _label="ECL_EU" onClick={ () => this.onClickTheme('ecl-eu') }/>
				<KolButton _label="EN" onClick={ () => this.onClickTheme('en') }/>
				<KolButton _label="ITZBund" onClick={ () => this.onClickTheme('itzbund') }/>
				<KolButton _label="MAPZ" onClick={ () => this.onClickTheme('mapz') }/>
				<KolButton _label="ZOLLv2" onClick={ () => this.onClickTheme('zoll-v2') }/>
		*/
		
		return (
			<div data-theme={ this.state.theme }>
				<KolHeading _level="1" _label="KoliBri Demo App" />
	
				<KolHeading _level="2" _label="Alert" />
				<KolAlert _label="Success" _type="success" _variant="card">A success message.</KolAlert>
				<KolAlert _label="Info" _type="info" _variant="card">An info message.</KolAlert>					
				<KolAlert _label="Error" _type="error" _variant="card">An error message.</KolAlert>					
					
				<KolHeading _level="2" _label="Breadcrump" />
				<KolBreadcrumb _links='[{"_label":"Start","_href":"#/"},{"_label":"Sub page","_href":"#/page1"}]' />
				
				<KolHeading _level="2" _label="Button"/>
				<KolButton _label="Click me!" _on={{ onClick: this.onClick }}/>
					
				<KolHeading _level="2" _label="Card" />
				<KolCard _label="A Card" _hasFooter="true" _level="1">
					<div slot="header">Text in header area</div>
					<div slot="content">Text in content area</div>
					<div slot="footer">Text in footer area</div>
				</KolCard>					

				<KolHeading _level="2" _label="Form" />
				<KolForm>
					<KolSelect
						_options="[{'label':'Alpha','value':'0'},{'label':'Beta','value':'1'},{'label':'Gamma','value':'2'}]"
						_value="['1']"
						/>
					<KolInputText
						_type="text"
						_label="Input"
						/>
				</KolForm>
					
				<KolHeading _level="2" _label="Spin"/>
				<KolSpin _show/>
					
				<KolHeading _level="2" _label="Kolibri Logo"/>
				<KolKolibri style={ { display: 'block', height: '100px'}}/>

			</div>
		);	
	}
	
	stateChangeTheme()
	{
		this.setState( { state: 'start' } );
		return e(Centered,{},[
			e(KolSpin,{ _show: true },null)]);
	}
	
	render()
	{
		if (this.state.state == 'changetheme')
		{
			return this.stateChangeTheme();
		}
		return this.stateStart();

	}	
}]]></script>
        <script_name>KoliBriDemoApp</script_name>
        <sys_class_name>sys_ui_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-07-25 11:36:58</sys_created_on>
        <sys_id>6b9df5fc97907110a6a07767f053afbc</sys_id>
        <sys_mod_count>121</sys_mod_count>
        <sys_name>x_snc_kolibri.KoliBriDemoApp</sys_name>
        <sys_package display_value="KoliBri WORK IN PROGRESS" source="x_snc_kolibri">bdfb7d3c97907110a6a07767f053af62</sys_package>
        <sys_policy/>
        <sys_scope display_value="KoliBri WORK IN PROGRESS">bdfb7d3c97907110a6a07767f053af62</sys_scope>
        <sys_update_name>sys_ui_script_6b9df5fc97907110a6a07767f053afbc</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-09-14 13:25:27</sys_updated_on>
        <ui_type>0</ui_type>
        <use_scoped_format>false</use_scoped_format>
    </sys_ui_script>
</record_update>
